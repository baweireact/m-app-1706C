{"version":3,"sources":["view/MyBook.js"],"names":["MyBook","index","myBook","this","props","count","myBookClone","JSON","parse","stringify","setState","splice","e","checked","target","forEach","item","Api","update","myBookNew","then","res","onDispacth","actionCreator","getMyBook","myBookDom","map","key","id","type","onChange","handleSelect","bind","htmlFor","title","price","onClick","handleSub","handleAdd","handleDelete","totalPrice","totalCount","filter","selectAll","length","handleSelectAll","Component","connect","state","a","dispatch","value","action"],"mappings":"sMAKMA,E,kLACMC,GAAQ,IACVC,EAAWC,KAAKC,MAAhBF,OACNA,EAAOD,GAAOI,QACd,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,UAAUP,IAC5CC,KAAKC,MAAMM,SAAS,SAAUJ,K,gCAGtBL,GAAQ,IACVC,EAAWC,KAAKC,MAAhBF,OACN,GAAIA,EAAOD,GAAOI,MAAQ,EAAG,CAC3BH,EAAOD,GAAOI,QACd,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,UAAUP,IAC5CC,KAAKC,MAAMM,SAAS,SAAUJ,M,mCAIrBL,GAAQ,IACbC,EAAWC,KAAKC,MAAhBF,OACNA,EAAOS,OAAOV,EAAO,GACrB,IAAIK,EAAcC,KAAKC,MAAMD,KAAKE,UAAUP,IAC5CC,KAAKC,MAAMM,SAAS,SAAUJ,K,mCAGnBL,EAAOW,GAAI,IAChBV,EAAWC,KAAKC,MAAhBF,OACNA,EAAOD,GAAOY,QAAUD,EAAEE,OAAOD,QACjC,IAAIP,EAAcC,KAAKC,MAAMD,KAAKE,UAAUP,IAC5CC,KAAKC,MAAMM,SAAS,SAAUJ,K,sCAGhBM,GAAI,IACZV,EAAWC,KAAKC,MAAhBF,OACNA,EAAOa,SAAQ,SAAAC,GACbA,EAAKH,QAAUD,EAAEE,OAAOD,WAE1B,IAAIP,EAAcC,KAAKC,MAAMD,KAAKE,UAAUP,IAC5CC,KAAKC,MAAMM,SAAS,SAAUJ,K,2CAIV,IACdJ,EAAWC,KAAKC,MAAhBF,OACNe,IAAIC,OAAO,CAAEC,UAAWjB,IAASkB,MAAK,SAAAC,S,0CAMtClB,KAAKC,MAAMkB,WAAWC,IAAcC,e,+BAG5B,IAAD,OACDtB,EAAWC,KAAKC,MAAhBF,OACFuB,EAAYvB,EAAOwB,KAAI,SAACV,EAAKf,GAAN,OAC3B,yBAAK0B,IAAKX,EAAKY,IACb,2BAAOC,KAAK,WAAWhB,QAASG,EAAKH,QAASiB,SAAU,EAAKC,aAAaC,KAAK,EAAM/B,GAAQ2B,GAAIZ,EAAKY,KACtG,2BAAOK,QAASjB,EAAKY,IAAKZ,EAAKkB,OAFjC,SAGIlB,EAAKmB,MACP,4BAAQC,QAAS,EAAKC,UAAUL,KAAK,EAAM/B,IAA3C,KACGe,EAAKX,MACR,4BAAQ+B,QAAS,EAAKE,UAAUN,KAAK,EAAM/B,IAA3C,KACA,4BAAQmC,QAAS,EAAKG,aAAaP,KAAK,EAAM/B,IAA9C,oBAGEuC,EAAa,EAAGC,EAAa,EACjCvC,EAAOwC,QAAO,SAAA1B,GAAI,OAAIA,EAAKH,WAASE,SAAQ,SAAAC,GAC1CyB,GAAczB,EAAKX,MACnBmC,GAAcxB,EAAKX,MAAQW,EAAKmB,SAElC,IAAIQ,EAAYzC,EAAOwC,QAAO,SAAA1B,GAAI,OAAIA,EAAKH,WAAS+B,SAAW1C,EAAO0C,QAAU1C,EAAO0C,OAAS,EAChG,OACE,6BACGnB,EACD,6BACE,2BAAOI,KAAK,WAAWhB,QAAS8B,EAAWf,GAAG,eAAeE,SAAU3B,KAAK0C,gBAAgBb,KAAK7B,QACjG,2BAAO8B,QAAQ,gBAAf,iBAJJ,2BAMOO,EANP,2BAMuBC,O,GA9ERK,aAsGNC,uBAlBS,SAACC,GACvB,MAAO,CACL9C,OAAQ8C,EAAM9C,OACd+C,EAAG,OAIoB,SAACC,GAC1B,MAAO,CACLxC,SADK,SACIiB,EAAKwB,GACZD,EAAS,CAAErB,KAAM,YAAaF,MAAKwB,WAErC7B,WAJK,SAIM8B,GACTF,EAASE,OAKAL,CAA6C/C","file":"static/js/3.cbcc62fe.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Api from '../api'\r\nimport actionCreator from '../store/actionCreator'\r\n\r\nclass MyBook extends Component {\r\n  handleAdd(index) {\r\n    let { myBook } = this.props\r\n    myBook[index].count++\r\n    let myBookClone = JSON.parse(JSON.stringify(myBook))\r\n    this.props.setState('myBook', myBookClone)\r\n  }\r\n\r\n  handleSub(index) {\r\n    let { myBook } = this.props\r\n    if (myBook[index].count > 1) {\r\n      myBook[index].count--\r\n      let myBookClone = JSON.parse(JSON.stringify(myBook))\r\n      this.props.setState('myBook', myBookClone)\r\n    }\r\n  }\r\n\r\n  handleDelete(index) {\r\n    let { myBook } = this.props\r\n    myBook.splice(index, 1)\r\n    let myBookClone = JSON.parse(JSON.stringify(myBook))\r\n    this.props.setState('myBook', myBookClone)\r\n  }\r\n\r\n  handleSelect(index, e) {\r\n    let { myBook } = this.props\r\n    myBook[index].checked = e.target.checked\r\n    let myBookClone = JSON.parse(JSON.stringify(myBook))\r\n    this.props.setState('myBook', myBookClone)\r\n  }\r\n\r\n  handleSelectAll(e) {\r\n    let { myBook } = this.props\r\n    myBook.forEach(item => {\r\n      item.checked = e.target.checked\r\n    })\r\n    let myBookClone = JSON.parse(JSON.stringify(myBook))\r\n    this.props.setState('myBook', myBookClone)\r\n  }\r\n\r\n  //每次更新都会走这个生命周期\r\n  componentDidUpdate() {\r\n    let { myBook } = this.props\r\n    Api.update({ myBookNew: myBook}).then(res => {\r\n\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onDispacth(actionCreator.getMyBook())\r\n  }\r\n\r\n  render() {\r\n    let { myBook } = this.props\r\n    let myBookDom = myBook.map((item,index) => (\r\n    <div key={item.id}>\r\n      <input type=\"checkbox\" checked={item.checked} onChange={this.handleSelect.bind(this, index)} id={item.id}></input>\r\n      <label htmlFor={item.id}>{item.title}</label>\r\n      ￥{item.price}\r\n      <button onClick={this.handleSub.bind(this, index)}>-</button>\r\n        {item.count}\r\n      <button onClick={this.handleAdd.bind(this, index)}>+</button>\r\n      <button onClick={this.handleDelete.bind(this, index)}>删除</button>\r\n    </div>\r\n    ))\r\n    let totalPrice = 0, totalCount = 0\r\n    myBook.filter(item => item.checked).forEach(item => {\r\n      totalCount += item.count\r\n      totalPrice += item.count * item.price\r\n    })\r\n    let selectAll = myBook.filter(item => item.checked).length === myBook.length && myBook.length > 0\r\n    return (\r\n      <div>\r\n        {myBookDom}\r\n        <div>\r\n          <input type=\"checkbox\" checked={selectAll} id=\"m-select-all\" onChange={this.handleSelectAll.bind(this)}></input>\r\n          <label htmlFor=\"m-select-all\">全选</label>\r\n        </div>\r\n        总价：￥{totalPrice}，总数：{totalCount}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myBook: state.myBook,\r\n    a: []\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispacth(action) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyBook)\r\n"],"sourceRoot":""}