{"version":3,"sources":["api/urls.js","api/index.js","store/store.js","view/Login.js","components/Nav.js","components/List.js","view/Home.js","view/Detail.js","view/News.js","components/Loading.js","view/Index.js","router/Router.js","serviceWorker.js","index.js","store/actionCreator.js"],"names":["axios","interceptors","request","use","config","response","res","data","code","alert","message","window","location","href","common","a","getNav","url","urls","getList","getMyBook","login","method","getDetail","add","update","register","defaultState","navList","currentId","currentList","myBook","loading","store","createStore","state","action","type","newState","JSON","parse","stringify","key","value","applyMiddleware","next","dispatch","console","log","Login","props","username","password","field","e","this","setState","target","trim","Api","then","localStorage","setItem","history","push","keyCode","handleLogin","onChange","handleInput","bind","autoFocus","placeholder","onKeyUp","handleEnter","onClick","Component","Nav","id","onDispacth","actionCreator","navListDom","map","item","className","handleNav","title","connect","List","count","checked","book","currentListDom","src","avatar","handleDetail","is_in_my_book","handleAdd","withRouter","Home","useState","detail","setDetail","useEffect","match","params","itemClone","requestFlag","News","newsList","page","end","newsRef","React","createRef","clientHeight","scrollTop","scrollHeight","length","document","getElementById","scrollIntoView","newsListDom","image","name","ref","onScroll","handleScroll","handleToTop","Loading","lazyLoading","MyBook","lazy","Promise","resolve","setTimeout","Index","to","fallback","path","component","render","getItem","Detail","Router","from","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0b0e05c.chunk.js","sourcesContent":["export default {\r\n  getNav: '/api/nav',\r\n  getList: '/api/list',\r\n  getMyBook: '/api/my_book',  //书包\r\n  login: '/api/login',   //登录\r\n  register: '/api/register', //注册\r\n  getDetail: '/api/detail',  //详情\r\n  add: '/api/add',  //收藏\r\n  update: '/api/update'  //更新\r\n}","import axios from 'axios'\r\nimport urls from './urls'\r\n\r\n//配置访问83端口的服务器\r\nif (process.env.NODE_ENV === 'development') {\r\n  axios.defaults.baseURL = 'http://localhost:83/'\r\n}\r\n\r\n//请求前的拦截\r\naxios.interceptors.request.use((config) => {\r\n  return config\r\n})\r\n\r\n//响应的拦截\r\naxios.interceptors.response.use((res) => {\r\n  if (res.data.code === 400) {\r\n    alert(res.data.message)\r\n  }\r\n  if (res.data.code === 403) {\r\n    window.location.href = '/login'\r\n  }\r\n  return res\r\n})\r\n\r\n//封装axios请求\r\nconst common = async (config) => {\r\n  let response = await axios(config)\r\n  //响应数据直接取.data数据返回，,then可以少些一个.data\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getNav: () => common({ url: urls.getNav }),\r\n  getList: (url) => common({ url: urls.getList + url }),\r\n  getMyBook: () => common({ url: urls.getMyBook }),\r\n  login: (data) => common({ url: urls.login, data, method: 'post' }),\r\n  getDetail: (url) => common({ url: urls.getDetail + url }),\r\n  add: (data) => common({ url: urls.add, data, method: 'post'}),\r\n  update: (data) => common({ url: urls.update, data, method: 'post' }),\r\n  register: (data) => common({ url: urls.register, data, method: 'post' })\r\n}","import { createStore, applyMiddleware }  from 'redux'\r\n//import thunk from 'redux-thunk'\r\n\r\nconst defaultState = {\r\n  navList: [],\r\n  currentId: 0,\r\n  currentList: [],\r\n  myBook: [],\r\n  loading: false\r\n}\r\n\r\n//纯函数\r\nconst reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_STATE':\r\n      let newState = JSON.parse(JSON.stringify(state)) //深拷贝\r\n      newState[action.key] = action.value\r\n      return newState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//自编写thunk中间件\r\nconst myThunk = store => next => action => {\r\n  if (typeof action === 'function') {\r\n    return action(store.dispatch)\r\n  }\r\n  return next(action)\r\n}\r\n\r\n//自己编写日志中间件\r\nconst log = store => next => action => {\r\n  console.log('日志:' + action.type)\r\n  next(action)\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware(myThunk, log))\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport Api from '../api'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleInput(field, e) {\r\n    this.setState({\r\n      [field]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleLogin() {\r\n    let { username, password } = this.state\r\n    if (username.trim() === '') {\r\n      alert('用户名不能为空')\r\n      return\r\n    }\r\n    if (password.trim() === '') {\r\n      alert('密码不能为空')\r\n      return\r\n    }\r\n    Api.login({ username, password }).then(res => {\r\n      if (res.code === 200) {\r\n        localStorage.setItem('username', res.data.username)\r\n        this.props.history.push('/index/home')\r\n      }\r\n    })\r\n  }\r\n\r\n  handleEnter(e) {\r\n    if (e.keyCode === 13) {\r\n      this.handleLogin()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { username, password } = this.state\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input value={username} onChange={this.handleInput.bind(this, 'username')} autoFocus placeholder=\"请输入用户名\"></input>\r\n        </div>\r\n        <div>\r\n          <input value={password} onChange={(e) => this.handleInput('password', e)} onKeyUp={this.handleEnter.bind(this)} placeholder=\"请输入密码\" type=\"password\"></input>\r\n        </div>\r\n        <button onClick={this.handleLogin.bind(this)}>登录</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Login\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Api from '../api'\r\nimport actionCreator from '../store/actionCreator'\r\n\r\nclass Nav extends Component {\r\n  handleNav(id) {\r\n    //点击导航时更新高亮\r\n    this.props.setState('currentId', id)\r\n    //点击导航时更新列表\r\n    this.props.onDispacth(actionCreator.getList(id))\r\n  }\r\n  componentDidMount() {\r\n    let { currentId } = this.props\r\n    //挂载时获取导航数据\r\n    this.props.onDispacth(actionCreator.getNav())\r\n    //挂载时获取列表数据\r\n    this.props.onDispacth(actionCreator.getList(currentId))\r\n  }\r\n  render() {\r\n    let { navList, currentId } = this.props\r\n    let navListDom = navList.map(item => (\r\n      <span \r\n        key={item.id} \r\n        className={\"m-nav-item \" + (currentId === item.id ? 'active' : '')}\r\n        onClick={this.handleNav.bind(this, item.id)}>{item.title}</span>\r\n    ))\r\n    return (\r\n      <div>\r\n        {navListDom}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    navList: state.navList,\r\n    currentId: state.currentId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispacth(action) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Api from '../api'\r\nimport actionCreator from '../store/actionCreator'\r\nimport LazyLoad from 'react-lazy-load'\r\n\r\nclass List extends Component {\r\n  //详情\r\n  handleDetail(id) {\r\n    this.props.history.push(`/index/detail/${id}`)\r\n  }\r\n  //收藏\r\n  handleAdd(item) {\r\n    let { myBook, currentId } = this.props\r\n    item.count = 1\r\n    item.checked = true\r\n    myBook.push(item)\r\n    this.props.setState('myBook', myBook)\r\n    this.props.setState('loading', true)\r\n    Api.add({ book: item }).then(res => {\r\n      if (res.code === 200) {\r\n        //收藏成功后再获取一遍列表数据，把收藏变成已收藏\r\n        this.props.onDispacth(actionCreator.getList(currentId))\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let { currentList } = this.props\r\n    //is_in_my_book标识收藏和已收藏，true为已收藏，false为收藏\r\n    let currentListDom = currentList.map(item => (\r\n      <div key={item.id} className=\"m-list-item\">\r\n        <LazyLoad className=\"m-list-item-img-wrap\">\r\n          <img src={item.avatar} className=\"m-list-item-img\"></img>\r\n        </LazyLoad>\r\n        <div className=\"m-list-item-info\">\r\n          {item.title}\r\n          <button onClick={this.handleDetail.bind(this, item.id)}>详情</button>\r\n          {\r\n            item.is_in_my_book ?\r\n              <button>已收藏</button>\r\n              :\r\n              <button onClick={this.handleAdd.bind(this, item)}>收藏</button>\r\n          }\r\n        </div>\r\n      </div>\r\n    ))\r\n    return (\r\n      <div>\r\n        {currentListDom}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    navList: state.navList,\r\n    currentId: state.currentId,\r\n    currentList: state.currentList,\r\n    myBook: state.myBook\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispacth(action) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(List))\r\n","import React, { Component } from 'react'\r\nimport Nav from '../components/Nav'\r\nimport List from '../components/List'\r\nimport { BackTop, Button } from 'antd'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav></Nav>\r\n        <List></List>\r\n        <BackTop>回到顶部</BackTop>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Api from '../api'\r\n\r\nconst Detail = (props) => {\r\n  const [detail, setDetail] = useState({})\r\n\r\n  const handleAdd = (item) => {\r\n    let { myBook } = props\r\n    item.count = 1\r\n    item.checked = true\r\n    myBook.push(item)\r\n    props.setState('myBook', myBook)\r\n    //显示loading\r\n    Api.add({ book: item }).then(res => {\r\n      if (res.code === 200) {\r\n        //取消loading\r\n        item.is_in_my_book = true\r\n        let itemClone = JSON.parse(JSON.stringify(item))\r\n        setDetail(itemClone)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let { id } = props.match.params\r\n    props.setState('loading', true)\r\n    Api.getDetail(`?id=${id}`).then(res => {\r\n      if (res.code === 200) {\r\n        setDetail(res.data)\r\n        props.setState('loading', false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <img src={detail.avatar}></img>\r\n      {detail.title}\r\n      {\r\n        detail.is_in_my_book ?\r\n          <button>已收藏</button>\r\n          :\r\n          <button onClick={handleAdd.bind(this, detail)}>收藏</button>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myBook: state.myBook\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail)","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { BackTop } from 'antd'\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  axios.defaults.baseURL = 'http://localhost:83/'\r\n}\r\n\r\nlet requestFlag = true\r\nexport default class News extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newsList: [],\r\n      page: 1,\r\n      end: ''\r\n    }\r\n\r\n    this.newsRef = React.createRef()\r\n  }\r\n\r\n  handleScroll(e) {\r\n    let { page, newsList, end } = this.state\r\n    //console.log(e.target.clientHeight, e.target.scrollTop, e.target.scrollHeight)\r\n    if (e.target.clientHeight + e.target.scrollTop + 100 > e.target.scrollHeight && requestFlag && end === '') {\r\n      console.log('快到底啦')\r\n      requestFlag = false\r\n      page = page + 1\r\n      this.setState({\r\n        page\r\n      })\r\n      axios({\r\n        url: `/api/news?page=${page}&size=10`\r\n      }).then(res => {\r\n        if (res.data.code === 200) {\r\n          this.setState({\r\n            newsList: [...newsList, ...res.data.data]\r\n          })\r\n          requestFlag = true\r\n          if (res.data.data.length < 10) {\r\n            this.setState({\r\n              end: '我是有底线的~'\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handleToTop() {\r\n    //this.newsRef.current.scrollTop = 0\r\n    document.getElementById('top').scrollIntoView(true)\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios({\r\n      url: '/api/news?page=1&size=10'\r\n    }).then(res => {\r\n      if (res.data.code === 200) {\r\n        this.setState({\r\n          newsList: res.data.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let { newsList, end } = this.state\r\n\r\n    let newsListDom = newsList.map(item => (\r\n      <div key={item.id} className=\"m-news-item\">\r\n        <img src={item.image}></img>\r\n        <div>{item.name}</div>\r\n      </div>\r\n    ))\r\n\r\n    return (\r\n      <div className=\"m-news-wrap\" id=\"news\" ref={this.newsRef} onScroll={this.handleScroll.bind(this)}>\r\n        <div id=\"top\"></div>\r\n        {newsListDom}\r\n        <div className=\"m-end\">{end}</div>\r\n        <button className=\"m-up-btn\" onClick={this.handleToTop.bind(this)}>↑</button>\r\n        <BackTop target={() => {\r\n          return document.getElementById('news')\r\n        }}>回到顶部</BackTop>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    let { loading, lazyLoading } = this.props\r\n    return (\r\n      <div className={\"m-loading-wrap \" + (loading ? 'active ' : '') + (lazyLoading ? 'active' : '')}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Loading)","import React, { Component, Suspense, lazy } from 'react'\r\nimport { NavLink, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Home from './Home'\r\n// import MyBook from './MyBook'\r\nimport Detail from './Detail'\r\nimport News from './News'\r\nimport Loading from '../components/Loading'\r\n\r\n//模拟路由懒加载延时\r\nconst MyBook = lazy( async () => {\r\n  return await new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(import('./MyBook'))\r\n    }, 2000)\r\n  })\r\n})\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <NavLink to=\"/index/home\" className=\"m-nav-item\">首页</NavLink>\r\n          <NavLink to=\"/index/my_book\" className=\"m-nav-item\">书包</NavLink>\r\n          <NavLink to=\"/index/news\" className=\"m-nav-item\">新闻</NavLink>\r\n        </div>\r\n        <Suspense fallback={<Loading lazyLoading={true}></Loading>}>\r\n          <Switch>\r\n            <Route path=\"/index/home\" component={Home}></Route>\r\n            <Route path=\"/index/my_book\" render={() => {\r\n              if (localStorage.getItem('username')) {\r\n                return <MyBook></MyBook>\r\n              } else {\r\n                return <Redirect to=\"/login\"></Redirect>\r\n              }\r\n            }}></Route>\r\n            <Route path=\"/index/detail/:id\" component={Detail}></Route>\r\n            <Route path=\"/index/news\" component={News}></Route>\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from '../view/Login'\r\nimport Index from '../view/Index'\r\nimport Loading from '../components/Loading'\r\n\r\nexport default class Router extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Redirect from=\"/\" to=\"/login\" exact></Redirect>\r\n          <Route path=\"/index\" component={Index}></Route>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n        </Switch>\r\n        <Loading></Loading>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider  } from \"react-redux\"\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\nimport store from './store/store'\nimport Router from './router/Router';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Router></Router>\n    </BrowserRouter>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Api from '../api'\r\n\r\n//类似于vuex里的actions\r\n\r\n//列表\r\nconst getList = id => dispatch => {\r\n  dispatch({ type: 'SET_STATE', key: 'loading', value: true })\r\n  Api.getList(`?id=${id}`).then(res => {\r\n    dispatch({ type: 'SET_STATE', key: 'currentList', value: res.data })\r\n    dispatch({ type: 'SET_STATE', key: 'loading', value: false })\r\n  })\r\n}\r\n\r\n//导航\r\nconst getNav = () => dispatch => {\r\n  Api.getNav().then(res => {\r\n    dispatch({ type: 'SET_STATE', key: 'navList', value: res.data })\r\n  })\r\n}\r\n\r\n//书包\r\nconst getMyBook = () => dispatch => {\r\n  dispatch({ type: 'SET_STATE', key: 'loading', value: true })\r\n  Api.getMyBook().then(res => {\r\n    if (res.code === 200) {\r\n      dispatch({ type: 'SET_STATE', key: 'myBook', value: res.data })\r\n      dispatch({ type: 'SET_STATE', key: 'loading', value: false })\r\n    }\r\n  })\r\n}\r\n\r\nexport default {\r\n  getNav,\r\n  getList,\r\n  getMyBook\r\n}"],"sourceRoot":""}